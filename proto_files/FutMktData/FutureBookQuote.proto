syntax = "proto3";

import "spiderrock_common.proto";


package spiderrock.protobuf;


/*
    This table contains live future quote records from the listing exchange.  Each record contains up to four price levels and represents a live snapshot of the book for a specific future.
*/    
message FutureBookQuote {
    message PKey {
        
        ExpiryKey fkey = 10;
    }


    MessageMetadata _meta = 1;
    
    PKey pkey = 2;
    UpdateType update_type = 100;
    MarketStatus market_status = 103; // market status (open, halted, etc)
    double bid_price1 = 106; // bid price
    double ask_price1 = 109; // ask price
    int32 bid_size1 = 112; // bid size in contracts
    int32 ask_size1 = 115; // ask size in contracts
    uint32 bid_orders1 = 118; // number of participating orders at the bid price
    uint32 ask_orders1 = 121; // number of participating orders at the ask price
    double bid_price2 = 124; // bid price
    double ask_price2 = 127; // ask price
    int32 bid_size2 = 130; // bid size in contracts
    int32 ask_size2 = 133; // ask size in contracts
    uint32 bid_orders2 = 136; // number of participating orders at the bid price
    uint32 ask_orders2 = 139; // number of participating orders at the ask price
    double bid_price3 = 142; // bid price
    double ask_price3 = 145; // ask price
    int32 bid_size3 = 148; // bid size in contracts
    int32 ask_size3 = 151; // ask size in contracts
    uint32 bid_orders3 = 154; // number of participating orders at the bid price
    uint32 ask_orders3 = 157; // number of participating orders at the ask price
    double bid_price4 = 160; // bid price
    double ask_price4 = 163; // ask price
    int32 bid_size4 = 166; // bid size in contracts
    int32 ask_size4 = 169; // ask size in contracts
    uint32 bid_orders4 = 172; // number of participating orders at the bid price
    uint32 ask_orders4 = 175; // number of participating orders at the ask price
    int64 src_timestamp = 178; // source high precision timestamp (if available)
    int64 net_timestamp = 181; // inbound packet PTP timestamp from SR gateway switch;usually syncronized with facility grandfather clock
}


