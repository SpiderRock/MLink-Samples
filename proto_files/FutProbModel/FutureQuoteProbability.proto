// ------------------------------------------------------------------------------------------------------------------------------
//
// Machine generated by root/generators/Protobuf.Messages.pl.  Do not edit directly.  Edit the corresponding root/definitions/Mbus.def
//
// Copyright 2014, SpiderRock Technology
//
// ------------------------------------------------------------------------------------------------------------------------------

syntax = "proto3";

package spiderrock.protobuf;
option csharp_namespace = "SRProtobufCore";


import "spiderrock_common.proto";

    
message FutureQuoteProbability {
    message PKey {
        
        ExpiryKey fkey = 10;
        StateModel state_model = 11;
    }


    MbusInfo _meta = 1;
    
    PKey pkey = 2;
    double bid_price = 100; // best bid price
    double ask_price = 103; // best ask price
    int32 bid_size = 106; // cumulative size @ bid price
    int32 ask_size = 109; // cumulative size @ ask price
    float bid_take_prob = 112; // bid take probability of current nbbo market (zero exchange fee) [average size print]
    float ask_take_prob = 115; // ask take probability of current nbbo market (zero exchange fee) [average size print]
    PredictResult bid_take_rv = 118; // model result code
    PredictResult ask_take_rv = 121; // model result code
    float bid_impr_price = 124; // trial improvement price (usually 1 tick or 1/2 spread inside bidPrice)
    float ask_impr_price = 127; // trial improvement price (usually 1 tick or 1/2 spread inside askPrice)
    float bid_tk_im_prob = 130; // bid take imprv probability of current nbbo market (zero exchange fee) [prob to sell (take) @ bid + imprIncrement]
    float ask_tk_im_prob = 133; // ask take imprv probability of current nbbo market (zero exchange fee) [prob to buy (take) @ ask - imprIncrement]
    PredictResult bid_tk_im_rv = 136; // model result code
    PredictResult ask_tk_im_rv = 139; // model result code
    double mid_price = 142; // price corresponding to 0.50 probability
    float avg_bid_link1m = 145; // average bid link value (~1 min)
    float mae_bid_link1m = 148; // bid link value mean abs err (~10 min)
    float avg_ask_link1m = 151; // average ask link value (~1 min)
    float mae_ask_link1m = 154; // ask link value mean abs err (~1 min)
    float avg_bid_link10m = 157; // average bid link value (~10 min)
    float mae_bid_link10m = 160; // bid link value mean abs err (~10 min)
    float avg_ask_link10m = 163; // average ask link value (~10 min)
    float mae_ask_link10m = 166; // ask link value mean abs err (~10 min)
    float avg_mkt_width1m = 169; // askPrice - bidPrice (~1 min)
    float avg_mkt_width10m = 172; // askPrice - bidPrice (~10 min)
    int32 counter = 175; // record update counter (zero @ start of period;per fkey)
    QPSource qp_source = 178;
    int64 src_timestamp = 181; // feed timestamp from the packet
    int64 net_timestamp = 184; // inbound packet PTP timestamp from SR gateway switch (from FutureBookQuote);zero = size only change
    int64 sms_timestamp = 187; // state model server timestamp (just before publish)
}


