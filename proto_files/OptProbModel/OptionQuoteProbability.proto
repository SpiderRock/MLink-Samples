syntax = "proto3";

import "spiderrock_common.proto";


package spiderrock.protobuf;


    
message OptionQuoteProbability {
    message PKey {
        
        OptionKey okey = 10;
        StateModel state_model = 11;
    }


    MessageMetadata _meta = 1;
    
    PKey pkey = 2;
    double u_mid = 100; // reference underlier midPrice (0.5 prob price)
    double u_prc = 103; // reference underlier price (mid-quote)
    float bid_price = 106; // nbbo bid price
    float ask_price = 109; // nbbo ask price
    int32 bid_size = 112; // cumulative size @ bid price
    int32 ask_size = 115; // cumulative size @ ask price
    float bid_take_prob = 118; // bid take probability of current nbbo market (zero exchange fee) [average size print]
    float ask_take_prob = 121; // ask take probability of current nbbo market (zero exchange fee) [average size print]
    PredictResult bid_take_rv = 124; // model result code
    PredictResult ask_take_rv = 127; // model result code
    float bid_impr_price = 130; // trial improvement price (usually 1 tick or 1/2 spread inside bidPrice)
    float ask_impr_price = 133; // trial improvement price (usually 1 tick or 1/2 spread inside askPrice)
    float bid_tk_im_prob = 136; // bid take imprv probability of current nbbo market (zero exchange fee) [prob to sell (take) @ bid + imprIncrement]
    float ask_tk_im_prob = 139; // ask take imprv probability of current nbbo market (zero exchange fee) [prob to buy (take) @ ask - imprIncrement]
    PredictResult bid_tk_im_rv = 142; // model result code
    PredictResult ask_tk_im_rv = 145; // model result code
    double surf_price = 148; // surface price
    double surf_vol = 151; // surface volatility
    double sdiv = 154; // expiry sdiv
    float surf_buy_prob = 157; // surface buy take probability (zero exchange fee) [average size print]
    float surf_sell_prob = 160; // surface sell take probability (zero exchange fee) [average size print]
    PredictResult b_surf_rv = 163; // model result code
    PredictResult s_surf_rv = 166; // model result code
    float vega = 169; // option vega
    float delta = 172; // option delta
    float mid_price = 175; // price corresponding to 0.50 probability
    float avg_bid_link10m = 178; // average bid take prob link value (~10 min)
    float mae_bid_link10m = 181; // bid link value mean abs err (~10 min)
    float avg_ask_link10m = 184; // average ask take prob link value (~10 min)
    float mae_ask_link10m = 187; // ask link value mean abs err (~10 min)
    float avg_mkt_width10m = 190; // askPrice - bidPrice (~10 min)
    int32 counter = 193; // record update counter (zero @ start of period;per okey)
    QPSource qp_source = 196;
    int64 src_timestamp = 199; // feed timestamp from the packet
    int64 net_timestamp = 202; // inbound packet PTP timestamp from SR gateway switch (from OptionNbboQuote)
    int64 sms_timestamp = 205; // state model server timestamp (just before publish)
}


