// ------------------------------------------------------------------------------------------------------------------------------
//
// Machine generated by root/generators/Protobuf.Messages.pl.  Do not edit directly.  Edit the corresponding root/definitions/Mbus.def
//
// Copyright 2014, SpiderRock Technology
//
// ------------------------------------------------------------------------------------------------------------------------------

syntax = "proto3";

package spiderrock.protobuf;
option csharp_namespace = "SRProtobufCore";

import "google/protobuf/timestamp.proto";

import "spiderrock_common.proto";

/*
    SpdrLiquidityRequest messages are used to indicate that liquidity support is requested for an order.
*/    
message SpdrLiquidityRequest {
    message PKey {
        
        int64 request_number = 10; // note: usually the baseParentNumber of the associated request
    }

    message DirectedCounterParty {
        
        string client_firm = 166;
    }

    message OrderLegs {
        
        int64 leg_id = 172; // SR leg Id
        OptionKey sec_key = 175; // leg
        SpdrKeyType sec_type = 178;
        uint32 mult = 181;
        BuySell side = 184;
        double ref_uPrc = 187; // reference underlier price (PrcDe orders)
        float ref_delta = 190; // reference delta (for PrcDe order handling)
    }


    MbusInfo _meta = 1;
    
    PKey pkey = 2;
    int64 parent_number = 100; // parent order associated with the request
    YesNo is_live_request = 103; // yes if request is from a production / live accnt
    OptionKey sec_key = 106;
    SpdrKeyType sec_type = 109;
    LiquidityReqType request_type = 112;
    LiquidityReqEvent request_event = 115;
    BuySell cust_side = 118;
    int32 cust_quantity = 121;
    CustQtyCond cust_qty_cond = 124;
    double cust_limit = 127;
    YesNo has_cust_limit = 130;
    YesNo is_cust_limit_tied = 133;
    string cust_identity = 136; // ClientFirm string of the SR client initiating the block auction
    double ref_uPrc = 139;
    double ref_delta = 142;
    double ref_gamma = 145;
    int32 min_response_qty = 148;
    int32 request_duration = 151; // number of seconds auction is expected to stay open
    int64 net_timestamp = 154;
    google.protobuf.Timestamp timestamp = 157;
    DirectedScope directed_scope = 160;
    repeated DirectedCounterParty directed_counter_party = 163;
    repeated OrderLegs order_legs = 169;
}


