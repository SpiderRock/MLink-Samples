// ------------------------------------------------------------------------------------------------------------------------------
//
// Machine generated by root/generators/Protobuf.Messages.pl.  Do not edit directly.  Edit the corresponding root/definitions/Mbus.def
//
// Copyright 2014, SpiderRock Technology
//
// ------------------------------------------------------------------------------------------------------------------------------

syntax = "proto3";

package spiderrock.protobuf;
option csharp_namespace = "SRProtobufCore";


import "spiderrock_common.proto";

/*
    This table contains live equity quote records for all CQS/UQDF securities as well as US OTC equity securities, SpiderRock synthetic markets, and a number of major indexes.  Each record contains up to two price levels and represents a live snapshot of the book for a specific market.
*/    
message StockBookQuote {
    message PKey {
        
        TickerKey ticker = 10;
    }


    MbusInfo _meta = 1;
    
    PKey pkey = 2;
    UpdateType update_type = 100;
    MarketStatus market_status = 103; // market status (open, halted, etc)
    float bid_price1 = 106; // bid price for best price level
    int32 bid_size1 = 109; // bid size for best price level
    StkExch bid_exch1 = 112;
    uint32 bid_mask1 = 115; // bid exchange bit mask for best bid price level
    float ask_price1 = 118; // ask price for best price level
    int32 ask_size1 = 121; // ask size for best price level
    StkExch ask_exch1 = 124; // exchange
    uint32 ask_mask1 = 127; // ask exchange bit mask for best ask price level
    float bid_price2 = 130; // bid price for next best price level
    int32 bid_size2 = 133; // bid size for next best price level
    StkExch bid_exch2 = 136; // exchange
    uint32 bid_mask2 = 139; // bid exchange bit mask for next best bid price level
    float ask_price2 = 142; // ask price for next best price level
    int32 ask_size2 = 145; // ask size for next best price level
    StkExch ask_exch2 = 148; // exchange
    uint32 ask_mask2 = 151; // ask exchange bit mask for next best ask price level
    uint32 halt_mask = 154; // bit mask of halted exchanges
    int64 src_timestamp = 157; // source high precision timestamp (if available)
    int64 net_timestamp = 160; // inbound packet PTP timestamp from SR gateway switch;usually syncronized with facility grandfather clock
}


